name: "Release : Docker"

on:
  # Triggered manually
  workflow_dispatch:
    inputs:
      tag:
        description: "Docker image tag"
        required: true
      targetEnv:
        description: "Target Environment"
        required: true
        type: choice
        options:
          - DEV
          - PROD
  # Triggered by release-nocodb.yml / release-nightly-dev.yml / release-pr.yml
  workflow_call:
    inputs:
      tag:
        description: "Docker image tag"
        required: true
        type: string
      targetEnv:
        description: "Target Environment"
        required: true
        type: string
      isDaily:
        description: "Is it triggered by daily schedule"
        required: false
        type: string
      currentVersion:
        description: "The current NocoDB version"
        required: false
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  buildx:
    runs-on: ubuntu-latest
    env:
      working-directory: ./packages/nocodb
    steps:
      - name: Get Docker Repository
        id: get-docker-repository
        run: |
          DOCKER_REPOSITORY=nocodb
          DOCKER_BUILD_TAG=${{ github.event.inputs.tag || inputs.tag }}
          DOCKER_BUILD_LATEST_TAG=latest
          if [[ "$DOCKER_BUILD_TAG" =~ "-beta." ]]; then
            DOCKER_BUILD_LATEST_TAG=$(echo $DOCKER_BUILD_TAG | awk -F '-beta.' '{print $1}')-beta.latest
          fi
          if [[ ${{ github.event.inputs.targetEnv || inputs.targetEnv }} == 'DEV' ]]; then
            if [[ ${{ github.event.inputs.currentVersion || inputs.currentVersion || 'N/A' }} != 'N/A' ]]; then
              DOCKER_BUILD_TAG=${{ github.event.inputs.currentVersion || inputs.currentVersion }}-${{ github.event.inputs.tag || inputs.tag }}
            fi
            if [[ ${{ inputs.isDaily || 'N' }} == 'Y' ]]; then 
              DOCKER_REPOSITORY=${DOCKER_REPOSITORY}-daily
            else
              DOCKER_REPOSITORY=${DOCKER_REPOSITORY}-timely
            fi
          fi
          echo "DOCKER_REPOSITORY=${DOCKER_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "DOCKER_BUILD_TAG=${DOCKER_BUILD_TAG}" >> $GITHUB_OUTPUT
          echo "DOCKER_BUILD_LATEST_TAG=${DOCKER_BUILD_LATEST_TAG}" >> $GITHUB_OUTPUT
          echo DOCKER_REPOSITORY: ${DOCKER_REPOSITORY}
          echo DOCKER_BUILD_TAG: ${DOCKER_BUILD_TAG}
          echo DOCKER_BUILD_LATEST_TAG: ${DOCKER_BUILD_LATEST_TAG}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
          
      - name: upgrade packages for nightly build or pr build
        if: ${{ github.event.inputs.targetEnv == 'DEV' || inputs.targetEnv == 'DEV' }}
        run: |
          export NODE_OPTIONS="--max_old_space_size=16384"
          cd packages/nocodb-sdk
          npm install && npm run build
          cd ../..
          cd packages/nc-gui
          npm install
          cd ../..

      - uses: bahmutov/npm-install@v1
        with:
          working-directory: ${{ env.working-directory }}

      - name: Build nocodb and docker files
        run: |
          npm run build
          npm run docker:build
        working-directory: ${{ env.working-directory }}

      - name: Build and push
        uses: docker/build-push-action@v3.2.0
        with:
          context: ${{ env.working-directory }}
          build-args: NC_VERSION=${{ steps.get-docker-repository.outputs.DOCKER_BUILD_TAG }}
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          tags: |
            nocodb/${{ steps.get-docker-repository.outputs.DOCKER_REPOSITORY }}:${{ steps.get-docker-repository.outputs.DOCKER_BUILD_TAG }}
            nocodb/${{ steps.get-docker-repository.outputs.DOCKER_REPOSITORY }}:${{ steps.get-docker-repository.outputs.DOCKER_BUILD_LATEST_TAG }}

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
